name: Test
on: [
  push,
  pull_request
]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - id: vars
        run: |
          echo ::set-output name=go_version::$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g')
          echo "Using Go version ${{ steps.vars.outputs.go_version }}"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.vars.outputs.go_version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        env:
          GIN_MODE: release
          METRICS: true
        run: go test -coverprofile=coverage.txt ./... | sed '/ERRO/d; /level=error/d; /printer.go/d'
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.33